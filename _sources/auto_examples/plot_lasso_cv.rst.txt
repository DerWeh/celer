
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_lasso_cv.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_lasso_cv.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_lasso_cv.py:


========================================================
Run LassoCV for cross-validation on the Leukemia dataset
========================================================

The example runs the LassoCV scikit-learn like estimator
using the Celer algorithm.

.. GENERATED FROM PYTHON SOURCE LINES 9-35

.. code-block:: default


    import numpy as np
    import matplotlib.pyplot as plt

    from sklearn.datasets import fetch_openml
    from sklearn.model_selection import KFold

    from celer import LassoCV
    from celer.plot_utils import configure_plt

    print(__doc__)
    configure_plt()

    print("Loading data...")
    dataset = fetch_openml("leukemia")
    X = np.asfortranarray(dataset.data.astype(float))
    y = 2 * ((dataset.target == "AML") - 0.5)
    y -= np.mean(y)
    y /= np.std(y)

    kf = KFold(shuffle=True, n_splits=3, random_state=0)
    model = LassoCV(cv=kf, n_jobs=3)
    model.fit(X, y)

    print("Estimated regularization parameter alpha: %s" % model.alpha_)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    usetex mode requires TeX.
    Loading data...
    Estimated regularization parameter alpha: 160.15306704065625




.. GENERATED FROM PYTHON SOURCE LINES 36-37

Display results

.. GENERATED FROM PYTHON SOURCE LINES 37-50

.. code-block:: default


    plt.figure(figsize=(5, 3), constrained_layout=True)
    plt.semilogx(model.alphas_, model.mse_path_, ':')
    plt.semilogx(model.alphas_, model.mse_path_.mean(axis=-1), 'k',
                 label='Average across the folds', linewidth=2)
    plt.axvline(model.alpha_, linestyle='--', color='k',
                label='alpha: CV estimate')

    plt.legend()

    plt.xlabel(r'$\alpha$')
    plt.ylabel('Mean square prediction error')
    plt.show(block=False)



.. image-sg:: /auto_examples/images/sphx_glr_plot_lasso_cv_001.png
   :alt: plot lasso cv
   :srcset: /auto_examples/images/sphx_glr_plot_lasso_cv_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  10.963 seconds)


.. _sphx_glr_download_auto_examples_plot_lasso_cv.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_lasso_cv.py <plot_lasso_cv.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_lasso_cv.ipynb <plot_lasso_cv.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
